@page "/"

@using upload.data
@inject IJSRuntime JsRuntime



<RealTimeMap height="calc(100vh - 6rem)" width="calc(100vw - 18rem)" OnAfterMapLoaded="@onAfterMapLoaded" OnClickMap="@onClickMap"></RealTimeMap>

@code {
   

    private async Task onAfterMapLoaded(RealTimeMap.MapEventArgs args)
    {
        // Initialize the data source with some points
        await args.sender.Geometric.Points.upload( new InputData().input);
    }

    public void onClickMap(RealTimeMap.ClicksMapArgs value)
    {
        List<RealTimeMap.StreamPoint> findedPoints = new List<RealTimeMap.StreamPoint>();
        findedPoints = (value.sender as RealTimeMap).Geometric.Points.getItems(point => (value.sender as RealTimeMap).Geometric.Computations.distance(
            point,
            new RealTimeMap.StreamPoint() { latitude = value.location.latitude, longitude = value.location.longitude },
            RealTimeMap.UnitOfMeasure.meters    //Unit of measure for the search radius
            ) <= 10                             //search radius
        );
        Task.Run(async delegate
        {
            await JsRuntime.InvokeVoidAsync("alert", $"GUID: {findedPoints.First().guid}\nType: {findedPoints.First().type}\nRegistration Number: {(findedPoints.First().value as Attributes).registrationNumber}"); // Alert
        });
    }
}
